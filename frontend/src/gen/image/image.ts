/**
 * Generated by orval v7.5.0 🍺
 * Do not edit manually.
 * Image Generation and Search API
 * Stable Diffusionを使った画像生成・検索API
 * OpenAPI spec version: 1.0.0
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";
import type {
  BodySearchImagesApiImageSearchPost,
  DeleteResponse,
  ImageFilenames,
  ImageGenerationParams,
  SearchImagesApiImageSearchPostParams,
  SimpleMetadata,
} from ".././schema";

/**
 * プロンプトから画像を生成し保存する
 * @summary Generate Image
 */
export const generateImageApiImageGeneratePost = <TData = AxiosResponse<SimpleMetadata>>(
  imageGenerationParams: ImageGenerationParams,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.post(`/api/image/generate`, imageGenerationParams, options);
};
/**
 * 保存されている全ての画像についてシンプルなメタデータを取得する
 * @summary Get All Simple Metadata
 */
export const getAllSimpleMetadataApiImageAllSimpleMetadataGet = <
  TData = AxiosResponse<SimpleMetadata[]>,
>(
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/image/all-simple-metadata`, options);
};
/**
 * control_imagesディレクトリにあるすべての画像ファイルについて名前を取得する
 * @summary Get All Control Image Filenames
 */
export const getAllControlImageFilenamesApiImageAllControlImageFilenamesGet = <
  TData = AxiosResponse<string[]>,
>(
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/image/all-control-image-filenames`, options);
};
/**
 * テキストまたは画像に基づいて類似画像を検索する
 * @summary Search Images
 */
export const searchImagesApiImageSearchPost = <TData = AxiosResponse<SimpleMetadata[]>>(
  bodySearchImagesApiImageSearchPost: BodySearchImagesApiImageSearchPost,
  params?: SearchImagesApiImageSearchPostParams,
  options?: AxiosRequestConfig
): Promise<TData> => {
  const formData = new FormData();
  if (
    bodySearchImagesApiImageSearchPost.image !== undefined &&
    bodySearchImagesApiImageSearchPost.image !== null
  ) {
    formData.append("image", bodySearchImagesApiImageSearchPost.image);
  }

  return axios.post(`/api/image/search`, formData, {
    ...options,
    params: { ...params, ...options?.params },
  });
};
/**
 * 画像を削除する
 * @summary Delete Images
 */
export const deleteImagesApiImageDeleteDelete = <TData = AxiosResponse<DeleteResponse>>(
  imageFilenames: ImageFilenames,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.delete(`/api/image/delete`, { data: imageFilenames, ...options });
};
export type GenerateImageApiImageGeneratePostResult = AxiosResponse<SimpleMetadata>;
export type GetAllSimpleMetadataApiImageAllSimpleMetadataGetResult = AxiosResponse<
  SimpleMetadata[]
>;
export type GetAllControlImageFilenamesApiImageAllControlImageFilenamesGetResult = AxiosResponse<
  string[]
>;
export type SearchImagesApiImageSearchPostResult = AxiosResponse<SimpleMetadata[]>;
export type DeleteImagesApiImageDeleteDeleteResult = AxiosResponse<DeleteResponse>;
axios.defaults.baseURL = process.env.NEXT_PUBLIC_API_BASE_URL;
